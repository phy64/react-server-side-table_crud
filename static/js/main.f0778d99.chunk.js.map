{"version":3,"sources":["services/AdminDataService.js","pages/admin/adminList.js","pages/admin/admin.js","pages/error.js","App.js","index.js"],"names":["http","axios","create","baseURL","headers","id","get","data","post","put","ids","delete","admin_seq_array","AdminList","props","handleChangeName","value","name","handleSearch","addQueryParameters","setState","reRenderApiRequest","enabled","handleDeleteAdmin","a","adminSeqArray","state","checkboxCheckedValues","length","window","alert","confirm","AdminDataService","response","message","console","error","handleCheckboxCheckedCallback","values","this","title","checkboxAll","column","rowSpan","colSpan","className","style","fontSize","sortable","columns","checkbox","formatter","dataIndex","total","from","rowData","to","admin_seq","url","settings","colGroup","queryParameterNames","search","language","checkboxCheckedCallback","onClick","disabled","Component","Admin","adminSeq","match","params","initialAdminState","tel","email","initialRefs","createRef","useState","admin","setAdmin","inputRefs","useRef","fields","label","type","maxLength","pattern","errorMessage","empty","getAdmin","useCallback","status","history","replace","prevState","useEffect","undefined","handleInputChange","event","target","val","validationError","el","current","focus","validationCheck","field","test","createAdmin","updateAdmin","deleteAdmin","push","Number","map","htmlFor","ref","onChange","autoComplete","reg_date","Error","App","basename","process","minWidth","href","width","maxWidth","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0778d99.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst http = axios.create({\n\tbaseURL: \"https://mock-up-data.herokuapp.com/api/admins\",\n\theaders: {\n\t\t\"Content-type\": \"application/json\"\n\t}\n});\n\nconst get = id => {\n  return http.get(`/${id}`);\n};\n\nconst create = data => {\n  return http.post(\"\", data);\n};\n\nconst update = (id, data) => {\n  return http.put(`/${id}`, data);\n};\n\nconst remove = ids => {\n  return http.delete(\"\", { data: { admin_seq_array: ids } });\n};\n\nexport default {\n  get,\n  create,\n  update,\n  remove\n};\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AdminDataService from '../../services/AdminDataService'\r\nimport ReactServerSideTable from 'react-server-side-table';\r\n\r\nclass AdminList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.name = \"\";\r\n    this.state = {\r\n      reRenderApiRequest: {\r\n        enabled: false\r\n      },\r\n      checkboxCheckedValues: []\r\n    };\r\n  };\r\n  \r\n  handleChangeName = (value) => {\r\n    this.name = value;\r\n  };\r\n  \r\n  handleSearch = () => {\r\n    const addQueryParameters = {\r\n      name: this.name\r\n    };\r\n    \r\n    this.setState({\r\n      addQueryParameters,\r\n      reRenderApiRequest: {\r\n        enabled: true\r\n      }\r\n    }, () => {\r\n      this.setState({\r\n        reRenderApiRequest: {\r\n          enabled: false\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  handleDeleteAdmin = async () => {\r\n    const { checkboxCheckedValues: adminSeqArray } = this.state;\r\n    \r\n    if (adminSeqArray.length === 0) {\r\n      window.alert('삭제할 관리자 정보를 선택해주세요.');\r\n      return false;\r\n    } else {\r\n      if (window.confirm(\"선택한 관리자 정보를 삭제하시겠습니까?\")) {\r\n        try {\r\n          const response = await AdminDataService.remove(adminSeqArray);\r\n          const { message } = response.data;\r\n    \r\n          window.alert(message);\r\n          \r\n          this.setState({\r\n            reRenderApiRequest: {\r\n              enabled: true\r\n            }\r\n          }, () => {\r\n            this.setState({\r\n              reRenderApiRequest: {\r\n                enabled: false\r\n              }\r\n            });\r\n          });\r\n        } catch (error) { \r\n          console.error('error', error);\r\n        };\r\n      };\r\n    };\r\n  };\r\n\r\n  handleCheckboxCheckedCallback = (values) => {\r\n    this.setState({\r\n      checkboxCheckedValues: values\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { reRenderApiRequest, checkboxCheckedValues } = this.state;\r\n    const url = 'https://mock-up-data.herokuapp.com/api/admins';\r\n    const headers = [\r\n      [\r\n        {title: '', checkboxAll: true, column: 'admin_seq', rowSpan: 2},\r\n        {title: 'No.', rowSpan: 2},\r\n        {title: '관리자 정보', colSpan: 4},\r\n        {title: <span><i className=\"fa fa-calendar\" style={{fontSize: \"14px\"}}/> 등록일</span>, column: 'reg_date', sortable: true, rowSpan: 2}\r\n      ],\r\n      [\r\n        {title: <span><i className=\"fa fa-id-card\" style={{fontSize: \"15px\"}}/> 아이디</span>, column: 'id', sortable: true},\r\n        {title: <span><i className=\"fa fa-user\" style={{fontSize: \"15px\"}}/> 이름</span>, column: 'name', sortable: true},\r\n        {title: <span><i className=\"fa fa-phone\" style={{fontSize: \"14px\"}}/> 연락처</span>, column: 'tel', sortable: true},\r\n        {title: <span><i className=\"fa fa-envelope\" style={{fontSize: \"14px\"}}/> 이메일</span>, column: 'email', sortable: true}\r\n      ]\r\n    ];\r\n\r\n    const columns = [\r\n      {\r\n        name: 'admin_seq',\r\n        checkbox: true\r\n      },\r\n      {\r\n        name: 'admin_seq',\r\n        formatter: ({ dataIndex, total, from }) => {\r\n          return total - (from - 1) - dataIndex;\r\n        }\r\n      },\r\n      {\r\n        name: 'id', \r\n        formatter: ({ rowData }) => {\r\n          return (\r\n            <Link to={`/admin/${rowData.admin_seq}`}>\r\n              { rowData.id }\r\n            </Link>\r\n          )\r\n        }\r\n      }, \r\n      {\r\n        name: 'name'\r\n      }, \r\n      {\r\n        name: 'tel'\r\n      }, \r\n      {\r\n        name: 'email'\r\n      }, \r\n      {\r\n        name: 'reg_date'\r\n      }\r\n    ];\r\n\r\n    const settings = {\r\n      colGroup: ['7%', '7%', '15%', '15%', '15%', '24%', '17%'],\r\n      queryParameterNames: {\r\n        search: 'id'\r\n      },\r\n      language: {\r\n        search: 'Search By ID'\r\n      },\r\n    };\r\n\r\n    return (\r\n      <>     \r\n        <ReactServerSideTable \r\n          url={url} \r\n          headers={headers} \r\n          columns={columns} \r\n          settings={settings}\r\n          reRenderApiRequest={reRenderApiRequest}\r\n          checkboxCheckedCallback={this.handleCheckboxCheckedCallback}\r\n        > \r\n          <>\r\n            <button className=\"btn btn-danger\" onClick={this.handleDeleteAdmin} disabled={checkboxCheckedValues.length === 0}>삭제</button>\r\n            <Link to={'/admin/new'} className=\"btn btn-success ml-2\">등록</Link>\r\n          </>\r\n        </ReactServerSideTable>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default AdminList;\r\n","import React, { useState, useEffect, useCallback, useRef, createRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AdminDataService from '../../services/AdminDataService';\r\n\r\nconst Admin = (props) => {\r\n  const adminSeq = props.match.params.id;\r\n  const initialAdminState = {\r\n    id: \"\",\r\n    name: \"\",\r\n    tel: \"\",\r\n    email: \"\"\r\n  };\r\n  const initialRefs = {\r\n    id: createRef(),\r\n    name: createRef(),\r\n    tel: createRef(),\r\n    email: createRef()\r\n  };\r\n  const [admin, setAdmin] = useState(initialAdminState);\r\n  const inputRefs = useRef(initialRefs);\r\n  const fields = [\r\n    {\r\n      name: 'id',\r\n      label: '관리자 ID', \r\n      type: 'text', \r\n      maxLength: null, \r\n      pattern: null, \r\n      errorMessage: {\r\n        empty: '관리자 ID를 입력해주세요.'\r\n      }\r\n    },\r\n    {\r\n      name: 'name', \r\n      label: '관리자명', \r\n      type: 'text', \r\n      maxLength: null, \r\n      pattern: null, \r\n      errorMessage: {\r\n        empty: '관리자명을 입력해주세요.'\r\n      }\r\n    },\r\n    {\r\n      name: 'tel', \r\n      label: '연락처', \r\n      type: 'text', \r\n      maxLength: 13, \r\n      pattern: /^(01[016789]{1}|02|0[3-9]{1}[0-9]{1})-?[0-9]{3,4}-?[0-9]{4}$/, \r\n      errorMessage: {\r\n        empty: '연락처를 입력해주세요.',\r\n        pattern: '연락처 형식이 잘못되었습니다.'\r\n      }\r\n    },\r\n    {\r\n      name: 'email', \r\n      label: '이메일', \r\n      type: 'text', \r\n      maxLength: null, \r\n      //eslint-disable-next-line\r\n      pattern: /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/, \r\n      errorMessage: {\r\n        empty: '이메일을 입력해주세요.',\r\n        pattern: '이메일 형식이 잘못되었습니다.'\r\n      }\r\n    }\r\n  ];\r\n\r\n  const getAdmin = useCallback(async () => {\r\n    try {\r\n      const response = await AdminDataService.get(adminSeq);\r\n      const { data, status } = response.data;\r\n\r\n      if(status === 404 || status === 500){\r\n        props.history.replace(\"/error\");\r\n      } else {\r\n        setAdmin(prevState => {\r\n          return {\r\n            ...prevState, \r\n            ...data\r\n          };\r\n        });\r\n      } \r\n    } catch (error) { \r\n      console.error('error', error);\r\n    }\r\n  }, [props, adminSeq]);\r\n\r\n  useEffect(() => {\r\n    if (adminSeq !== undefined) {\r\n      getAdmin();\r\n    }\r\n  }, [adminSeq, getAdmin]);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    if(value.search(/\\s/) !== -1){\r\n      return false;\r\n    };\r\n\r\n    const val = name === 'tel' ? value.replace(/[^0-9]/g, '').replace(/(^02.{0}|^01.{1}|[0-9]{3})([0-9]+)([0-9]{4})/, '$1-$2-$3') : value;\r\n\r\n    setAdmin(prevState => {\r\n      return {\r\n        ...prevState, \r\n        [name]: val\r\n      };\r\n    });\r\n  };\r\n\r\n  const validationError = (el, message) => {\r\n    inputRefs.current[el].current.focus();\r\n    window.alert(message);\r\n  };\r\n\r\n  const validationCheck = () => {\r\n    for (const field of fields) {\r\n      const { name, pattern, errorMessage } = field;\r\n      const value = admin[name];\r\n\r\n      if (value === '' || value === null || value === undefined) {\r\n        validationError(name, errorMessage.empty);\r\n        return true;\r\n      };\r\n\r\n      if (pattern !== null && !pattern.test(value)) {\r\n        validationError(name, errorMessage.pattern);\r\n        return true;\r\n      };\r\n    };\r\n\r\n    return false;\r\n  };\r\n\r\n  const createAdmin = async () => {\r\n    if (validationCheck()) {\r\n      return false;\r\n    };\r\n\r\n    try {\r\n      const response = await AdminDataService.create({ ...admin });\r\n      const { message } = response.data;\r\n     \r\n      window.alert(message);\r\n      setAdmin(initialAdminState);\r\n    } catch (error) { \r\n      console.error('error', error);\r\n    };\r\n  };\r\n\r\n  const updateAdmin = async () => {\r\n    if (validationCheck()) {\r\n      return false;\r\n    };\r\n    \r\n    try {\r\n      const response = await AdminDataService.update(adminSeq, { ...admin });\r\n      const { message } = response.data;\r\n     \r\n      window.alert(message);\r\n    } catch (error) { \r\n      console.error('error', error);\r\n    };\r\n  };\r\n\r\n  const deleteAdmin = async () => {\r\n    if (window.confirm(\"관리자 정보를 삭제하시겠습니까?\")) {\r\n      try {\r\n        const response = await AdminDataService.remove(adminSeq);\r\n        const { status, message } = response.data;\r\n  \r\n        window.alert(message);\r\n        \r\n        if (status === 200) {\r\n          props.history.push(\"/admin\");\r\n        };\r\n      } catch (error) { \r\n        console.error('error', error);\r\n      };\r\n    };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\r\n        (adminSeq === undefined || Number(adminSeq) === admin.admin_seq) && (\r\n          <div className=\"submit-form\">\r\n            {\r\n              fields.map(({ name, label, type, maxLength }) => (\r\n                <div\r\n                  key={name} \r\n                  className=\"form-group\"\r\n                >\r\n                  <label htmlFor={name}>{ label }</label>\r\n                  <input\r\n                    ref={inputRefs.current[name]}\r\n                    type={type}\r\n                    className=\"form-control\"\r\n                    id={name}\r\n                    value={admin[name]}\r\n                    onChange={handleInputChange}\r\n                    autoComplete=\"off\"\r\n                    name={name}\r\n                    maxLength={maxLength}\r\n                  />\r\n                </div>\r\n              ))\r\n            }\r\n            {\r\n              adminSeq !== undefined && (\r\n                <div className=\"form-group\">\r\n                  <label>등록일</label>\r\n                  <div>\r\n                    <span>{admin.reg_date}</span>\r\n                  </div>\r\n                </div>\r\n              )\r\n            }\r\n\r\n            <Link to={\"/admin\"} className=\"btn btn-primary\">\r\n              목록으로\r\n            </Link>\r\n\r\n            {\r\n              adminSeq !== undefined ? (\r\n                <>\r\n                  <button onClick={deleteAdmin} className=\"btn btn-danger ml-1\">\r\n                    삭제\r\n                  </button>\r\n                  <button onClick={updateAdmin} className=\"btn btn-success ml-1\">\r\n                    수정\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button onClick={createAdmin} className=\"btn btn-success ml-1\">\r\n                  등록\r\n                </button>\r\n              )\r\n            }\r\n          </div>\r\n        )\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Admin;","import React from 'react';\r\n\r\nfunction Error() {\r\n  return (\r\n    <div> \r\n      <h1>Error Page</h1> \r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Error","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { AdminList, Admin, Error } from './pages';\n\nfunction App () {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\" style={{minWidth: '1140px'}}>\n        <a href={`${process.env.PUBLIC_URL}/`} className=\"navbar-brand\">\n          REACT CRUD\n        </a>\n      </nav>\n      <div className=\"container mt-3\" style={{width: '1140px', maxWidth: 'none'}}>\n        <Switch>\n          <Route exact path={[\"/\", \"/admin\"]} component={AdminList}/>\n          <Route exact path=\"/admin\" component={AdminList}/>\n          <Route exact path=\"/admin/new\" component={Admin}/>\n          <Route exact path=\"/admin/:id\" component={Admin}/>\n          <Route exact path=\"/error\" component={Error}/>\n          <Redirect to=\"/error\" />\n        </Switch>\n      </div>\n    </Router>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}